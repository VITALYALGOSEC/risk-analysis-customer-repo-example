name: AlgoSec Action
on: [pull_request]
jobs:
  AlgoSec-Code-Analysis:
    runs-on: ubuntu-latest
    env:
      working_directory: ./tf-test
    defaults:
      run:
        working-directory: ${{ env.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -no-color
        continue-on-error: true

      - uses: actions/github-script@v5
        if: steps.init.outcome == 'failure'
        env:
          PLAN: "terraform\n err:${{ steps.init.outputs.stderr }}"
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              
              <details><summary>Show Initialization's errors</summary>
              
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
              
              </details>
              
              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
                
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
      
      - name: Init failed
        if: steps.init.outcome == 'failure'
        run: exit 1

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: true

      - uses: actions/github-script@v5
        if: steps.validate.outcome == 'failure'
        env:
          PLAN: "terraform\n ${{ steps.validate.outputs.stderr }}"
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
              
              <details><summary>Show Validation's errors</summary>
              
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
              
              </details>
              
              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
                
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
      
      - name: Init failed
        if: steps.validate.outcome == 'failure'
        run: exit 1

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color
        continue-on-error: true

      - uses: actions/github-script@v5
        if: steps.plan.outcome == 'failure'
        env:
          PLAN: "terraform\n ${{ steps.plan.outputs.stderr }}"
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const output = `
              #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
              #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

              <details><summary>Show Plan's errors</summary>
              
              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`
              
              </details>
              
              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
                
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
      
      - name: Init failed
        if: steps.plan.outcome == 'failure'
        run: exit 1
